#!/usr/bin/env bash
# shellcheck disable=SC1091,SC1090
#
# Simple aur helper.
#
# Usage: ./saur pkg pkg pkg
export LC_ALL=C LANG=C
shopt -s nullglob nocasematch
AUR_CACHE_DIR="${AUR_CACHE_DIR:-${HOME}/.cache/saur}"
mkdir -p "${AUR_CACHE_DIR}/update"

pkg_get() {
    cd "$AUR_CACHE_DIR" || exit 1

    for pkg in "$@"; do
        git clone "https://aur.archlinux.org/${pkg}.git" 2>/dev/null || {
            pull="$(git -C "$pkg" pull 2>/dev/null)"
            printf "%s" "${pull/Already up to date.}"
        }
    done
}

pkg_check() {
    for pkg in "$@"; do
        cd "${AUR_CACHE_DIR}/${pkg}" || continue

        for file in PKGBUILD *.sh *.desktop *.h *.install; do
            read -rn 1 -p "View $file for ${pkg}? [y/n] " yn; echo
            [[ "$yn" =~ y ]] && "${EDITOR:-vi}" "$file"
        done
    done
}

pkg_deps() {
    local depends deps_aur

    for pkg in "$@"; do
        source "${AUR_CACHE_DIR}/${pkg}/PKGBUILD" 2>/dev/null || continue
        depends=("${depends[@]//?=[0-9]*}")

        # Log deps that aren't installed.
        IFS=$'\n' read -d "" -ra depends \
            <<< "$(pacman -Q "${depends[@]}" 2>&1 >/dev/null)"

        depends=("${depends[@]%\'*}")
        depends=("${depends[@]#*\'}")

        # If the deps aren't in the local repositories, install
        # them from the aur.
        for dep in "${depends[@]}"; do
            pacman -Ss "$dep" >/dev/null || deps_aur+=("$dep")
        done

        pkg "${deps_aur[@]}"
    done
}

pkg_install() {
    for pkg in "$@"; do
        cd "${AUR_CACHE_DIR}/${pkg}" && \
            makepkg -sfcCi "${FUNCNAME[2]/pkg_deps/--asdeps}"
    done
}

pkg_update() {
    local update_pkgs

    cd "${AUR_CACHE_DIR}/update" || exit 1
    IFS=$'\n' read -d "" -ra pkgs <<< "$(pacman -Qem)"

    # Construct list of arguments to send to curl.
    printf -v urls ",%s" "${pkgs[@]/ [0-9]*}"
    urls="${urls:1}"

    # Download all of the pkg data using curl to get latest
    # version numbers. This is much faster than using 'git pull'
    # in existing package repositories.
    curl -fs -L --remote-name-all \
         -O "https://aur.archlinux.org/rpc/?v=5&type=info&arg[]={${urls[*]}}"

    file_path="${AUR_CACHE_DIR}/update/?v=5&type=info&arg[]="

    for pkg in "${pkgs[@]}"; do
        pkg_name="${pkg% *}"
        pkg_ver="${pkg#* }"

        # Extract the version number from the json.
        pkgbuild="$(< "${file_path}${pkg_name}")"
        aur_ver="${pkgbuild#*\"Version\":\"}"
        aur_ver="${aur_ver%%\"*}"

        # 'vercmp' is installed with 'pacman' and is used to
        # compare version numbers.
        if (("$(vercmp "$pkg_ver" "$aur_ver")" == -1)); then
            printf "%s\\n" "${pkg_name}: $pkg_ver --> $aur_ver"
            update_pkgs+=("$pkg_name")
        fi
    done

    if [[ "${update_pkgs[0]}" ]]; then
        read -rn 1 -p $'\n'"Update packages? [y/n] " yn; echo
        [[ "$yn" =~ y ]] && pkg "${update_pkgs[@]}"
    fi
}

pkg() {
    pkg_get "$@"
    pkg_check "$@"
    pkg_deps "$@"
    pkg_install "$@"
}

[[ "$1" ]] || pkg_update && pkg "$@"
